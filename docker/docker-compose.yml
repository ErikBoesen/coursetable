version: "3.2"
services:
  api:
    image: node:latest
    ports:
      - "4096:4096"
      - "3001:3001"
    volumes:
      - ../api:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    user: "1000"
    # make the API wait for mysql and Hasura to start first
    command: ./wait-for-it.sh mysql:3306 -t 60 -- ./wait-for-it.sh graphql-engine:8080 -t 60 -- sh -cx 'cd /app && yarn && yarn start'

    depends_on:
      - graphql-engine
      - mysql
    environment:
      GRAPHQL_ENDPOINT: http://graphql-engine:8080/v1/graphql
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: GoCourseTable
      STUDENTS_DB: yaleplus
      COURSES_DB: yale_advanced_oci
      CHALLENGE_PASSWORD: thisisapassword2
      SESSION_SECRET: "this is a dumb secret"
      FERRY_SECRET: "" # we want this empty in development so no auth is required to refresh
      YALIES_API_KEY: ${YALIES_API_KEY?password}
      CERT_PATH: ${CERT_PATH?cert_path}
      KEY_PATH: ${KEY_PATH?key_path}

  graphql-engine:
    image: hasura/graphql-engine:v1.3.3
    ports:
      - "8085:8080"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:thisisapassword@ocean.coursetable.com:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

  nginx:
    build: ./nginx
    ports:
      - "8079:8080"
    expose:
      - "8080"
    volumes:
      - ..:/usr/share/nginx/html
      # Overwrite the default configuration. Our conf is based on it
      - ../sysadmin/nginx/docker:/etc/nginx/conf.d/default.conf
    depends_on:
      - php-fpm
      - mysql
    links:
      - php-fpm

  # Ensure php deps are installed
  php:
    build: ./php
    volumes:
      - ..:/var/www/html
    command: sh -c 'php composer.phar install && tail -f /dev/null'
    working_dir: /var/www/html

  php-fpm:
    # env_file: ../facebook.env
    environment:
      FACEBOOK_APP_ID: ${FACEBOOK_APP_ID?fb_app_id}
      FACEBOOK_APP_SECRET: ${FACEBOOK_APP_SECRET?fb_app_secret}
    build: ./php
    volumes:
      - ..:/usr/share/nginx/html

  mysql:
    build: ./mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: GoCourseTable
    ports:
      - "3306:3306"
    volumes:
      # This will get used to initialize the database: see
      # "Initializing a fresh instance"
      # in https://hub.docker.com/_/mariadb
      - ./mysql/database.sql:/docker-entrypoint-initdb.d/00-database.sql

  phpmyadmin:
    build: ./phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: GoCourseTable
    ports:
      - "8081:80"

  legacy:
    image: nginx
    ports:
      - "8075:80"
    volumes:
      - ../legacy:/usr/share/nginx/html:ro
